name: Deploy Personal Website

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Generate Prisma client
      run: npx prisma generate
      
    - name: Run linting
      run: npm run lint
      
    - name: Build application
      run: npm run build
      env:
        NEXTAUTH_URL: http://localhost:3000
        NEXTAUTH_SECRET: test-secret-for-build
        DATABASE_URL: file:./test.db
        EMAIL_SERVER_HOST: smtp.example.com
        EMAIL_SERVER_PORT: 587
        EMAIL_SERVER_USER: test@example.com
        EMAIL_SERVER_PASSWORD: test-password
        EMAIL_FROM: test@example.com
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: .next/
        retention-days: 1

  deploy-vercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        
  deploy-railway:
    name: Deploy to Railway (Alternative)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && false # Disabled by default
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Railway
      uses: bervProject/railway-deploy@v1.0.0
      with:
        railway_token: ${{ secrets.RAILWAY_TOKEN }}
        service: ${{ secrets.RAILWAY_SERVICE }}
        
  lighthouse:
    name: Lighthouse Performance Test
    runs-on: ubuntu-latest
    needs: deploy-vercel
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Wait for deployment
      run: sleep 30
      
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          https://${{ secrets.VERCEL_URL }}
          https://${{ secrets.VERCEL_URL }}/albums
          https://${{ secrets.VERCEL_URL }}/notes
          https://${{ secrets.VERCEL_URL }}/timeline
        configPath: './.lighthouserc.json'
        uploadArtifacts: true
        temporaryPublicStorage: true

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=high
      
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-vercel, lighthouse, security-scan]
    if: always()
    
    steps:
    - name: Notify Success
      if: needs.deploy-vercel.result == 'success'
      run: |
        echo "üéâ Deployment successful!"
        echo "‚úÖ Website: https://${{ secrets.VERCEL_URL }}"
        echo "‚úÖ Admin: https://${{ secrets.VERCEL_URL }}/admin"
        echo "‚úÖ API: https://${{ secrets.VERCEL_URL }}/api"
        
    - name: Notify Failure
      if: needs.deploy-vercel.result == 'failure'
      run: |
        echo "‚ùå Deployment failed!"
        echo "Please check the logs and fix the issues."
        exit 1